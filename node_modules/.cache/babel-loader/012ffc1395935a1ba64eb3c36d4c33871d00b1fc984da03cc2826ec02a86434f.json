{"ast":null,"code":"var _jsxFileName = \"/home/chhabi/Desktop/MHM_MHM/frontend/src/Containers/DoctorAI/DoctorAI.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Box, TextField, Button, Typography, Paper } from \"@mui/material\";\nimport styled from '@emotion/styled';\nimport TypingIndicator from \"../../Components/TypingIndicator/TypingIndicator\";\nimport { useTheme } from '@mui/material/styles';\n// const theme = useTheme();\n\n// const ChatContainer = styled(Box)({\n//   border: \"1px solid #ccc\",\n//   margin: \"50px\",\n//   padding: \"20px\",\n//   height: \"400px\",\n//   overflowY: \"auto\",\n//   display: \"flex\",\n//   flexDirection: \"column\",\n//   // backgroundColor: \"black\",\n//   gap: \"15px\",\n//   '&::-webkit-scrollbar': {\n//     width: '10px',\n//   },\n//   '&::-webkit-scrollbar-track': {\n//     background: '#f1f1f1', \n//   },\n//   '&::-webkit-scrollbar-thumb': {\n//     background: '#888', \n//   },\n//   '&::-webkit-scrollbar-thumb:hover': {\n//     background: '#555', \n//   },\n//   [theme.breakpoints.down('sm')]: {\n//     margin: '50px 0',\n//   },\n// });\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessagePaper = styled(Paper)({\n  padding: \"10px\",\n  width: \"fit-content\"\n});\nconst UserMessage = styled(MessagePaper)({\n  alignSelf: \"flex-end\",\n  backgroundColor: \"lightblue\"\n});\n_c = UserMessage;\nconst BotMessage = styled(MessagePaper)({\n  alignSelf: \"flex-start\",\n  backgroundColor: \"lightgreen\"\n});\n_c2 = BotMessage;\nconst Form = styled('form')({\n  display: \"flex\",\n  justifyContent: \"center\",\n  margin: \"20px 50px\",\n  gap: \"15px\"\n});\n_c3 = Form;\nconst DoctorAI = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const endOfMessages = useRef(null);\n  const theme = useTheme();\n  const ChatContainer = styled(Box)(_ref => {\n    let {\n      theme\n    } = _ref;\n    return {\n      height: '400px',\n      border: '1px solid #ccc',\n      margin: '50px',\n      padding: '20px',\n      overflowY: 'auto',\n      '&::-webkit-scrollbar': {\n        width: '10px'\n      },\n      '&::-webkit-scrollbar-track': {\n        background: '#f1f1f1'\n      },\n      '&::-webkit-scrollbar-thumb': {\n        background: '#888'\n      },\n      '&::-webkit-scrollbar-thumb:hover': {\n        background: '#555'\n      },\n      [theme.breakpoints.down('sm')]: {\n        margin: '50px 0'\n      }\n    };\n  });\n  const scrollToBottom = () => {\n    endOfMessages.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(scrollToBottom, [messages]);\n  const fetchResponse = async message => {\n    const response = await fetch(\"/apis/doctorai/\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        message: message\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    return data;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessages([...messages, {\n      text: input,\n      sender: \"user\"\n    }]);\n    setMessages(prevMessages => [...prevMessages, {\n      text: /*#__PURE__*/_jsxDEV(TypingIndicator, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }, this),\n      sender: \"bot\"\n    }]);\n    const data = await fetchResponse(input);\n    setTimeout(() => {\n      // Remove \"typing...\" message and add bot response\n      setMessages(prevMessages => [...prevMessages.slice(0, -1), {\n        text: data.message,\n        sender: \"bot\"\n      }]);\n    }, 2000); // delay of 2 seconds\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    textAlign: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(ChatContainer, {\n      children: [messages.map((message, index) => message.sender === 'user' ? /*#__PURE__*/_jsxDEV(UserMessage, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 38\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(BotMessage, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 37\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: endOfMessages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        c: true,\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type a message\",\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorAI, \"5O0qXjA05WhzoS/7RntWfanwpuo=\", false, function () {\n  return [useTheme];\n});\n_c4 = DoctorAI;\nexport default DoctorAI;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"UserMessage\");\n$RefreshReg$(_c2, \"BotMessage\");\n$RefreshReg$(_c3, \"Form\");\n$RefreshReg$(_c4, \"DoctorAI\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","TextField","Button","Typography","Paper","styled","TypingIndicator","useTheme","jsxDEV","_jsxDEV","MessagePaper","padding","width","UserMessage","alignSelf","backgroundColor","_c","BotMessage","_c2","Form","display","justifyContent","margin","gap","_c3","DoctorAI","_s","messages","setMessages","input","setInput","endOfMessages","theme","ChatContainer","_ref","height","border","overflowY","background","breakpoints","down","scrollToBottom","current","scrollIntoView","behavior","fetchResponse","message","response","fetch","method","body","JSON","stringify","headers","data","json","handleSubmit","e","preventDefault","text","sender","prevMessages","fileName","_jsxFileName","lineNumber","columnNumber","setTimeout","slice","textAlign","children","map","index","variant","ref","onSubmit","c","value","onChange","target","placeholder","fullWidth","color","type","_c4","$RefreshReg$"],"sources":["/home/chhabi/Desktop/MHM_MHM/frontend/src/Containers/DoctorAI/DoctorAI.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Box, TextField, Button, Typography,Paper } from \"@mui/material\";\nimport styled from '@emotion/styled';\nimport TypingIndicator from \"../../Components/TypingIndicator/TypingIndicator\";\nimport { useTheme } from '@mui/material/styles';\n// const theme = useTheme();\n\n// const ChatContainer = styled(Box)({\n//   border: \"1px solid #ccc\",\n//   margin: \"50px\",\n//   padding: \"20px\",\n//   height: \"400px\",\n//   overflowY: \"auto\",\n//   display: \"flex\",\n//   flexDirection: \"column\",\n//   // backgroundColor: \"black\",\n//   gap: \"15px\",\n//   '&::-webkit-scrollbar': {\n//     width: '10px',\n//   },\n//   '&::-webkit-scrollbar-track': {\n//     background: '#f1f1f1', \n//   },\n//   '&::-webkit-scrollbar-thumb': {\n//     background: '#888', \n//   },\n//   '&::-webkit-scrollbar-thumb:hover': {\n//     background: '#555', \n//   },\n//   [theme.breakpoints.down('sm')]: {\n//     margin: '50px 0',\n//   },\n// });\n\nconst MessagePaper = styled(Paper)({\n  padding: \"10px\",\n  width: \"fit-content\"\n});\n\nconst UserMessage = styled(MessagePaper)({\n  alignSelf: \"flex-end\",\n  backgroundColor: \"lightblue\"\n});\n\nconst BotMessage = styled(MessagePaper)({\n  alignSelf: \"flex-start\",\n  backgroundColor: \"lightgreen\"\n});\n\nconst Form = styled('form')({\n  display: \"flex\",\n  justifyContent: \"center\",\n  margin: \"20px 50px\",\n  gap: \"15px\"\n});\n\n\n\n\nconst DoctorAI = () => {\n  const [messages, setMessages] = useState([]);\n\n  const [input, setInput] = useState(\"\");\n  const endOfMessages = useRef(null);\n\n\n  const theme = useTheme();\n\n  const ChatContainer = styled(Box)(({ theme }) => ({\n    height: '400px',\n    border: '1px solid #ccc',\n    margin: '50px',\n    padding: '20px',\n    overflowY: 'auto',\n    '&::-webkit-scrollbar': {\n      width: '10px',\n    },\n    '&::-webkit-scrollbar-track': {\n      background: '#f1f1f1', \n    },\n    '&::-webkit-scrollbar-thumb': {\n      background: '#888', \n    },\n    '&::-webkit-scrollbar-thumb:hover': {\n      background: '#555', \n    },\n    [theme.breakpoints.down('sm')]: {\n      margin: '50px 0',\n    },\n  }));\n\n\n\n  const scrollToBottom = () => {\n    endOfMessages.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(scrollToBottom, [messages]);\n\n  const fetchResponse = async (message) => {\n    const response = await fetch(\"/apis/doctorai/\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        message: message,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const data = await response.json();\n    return data;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setMessages([...messages, { text: input, sender: \"user\" }]);\n    setMessages((prevMessages) => [\n      ...prevMessages,\n      { text: <TypingIndicator />, sender: \"bot\" },\n    ]);\n    const data = await fetchResponse(input);\n    setTimeout(() => {\n        // Remove \"typing...\" message and add bot response\n        setMessages((prevMessages) => [\n            ...prevMessages.slice(0, -1),\n            { text: data.message, sender: \"bot\" },\n        ]);\n    }, 2000); // delay of 2 seconds\n    setInput(\"\");\n};\n  \n\n  return (\n    <Box textAlign=\"center\">\n      <ChatContainer>\n        {messages.map((message, index) => \n          message.sender === 'user' ? \n            <UserMessage key={index}><Typography variant=\"body1\">{message.text}</Typography></UserMessage> :\n            <BotMessage key={index}><Typography variant=\"body1\">{message.text}</Typography></BotMessage>\n        )}\n        <div ref={endOfMessages} />\n      </ChatContainer>\n      <Form onSubmit={handleSubmit}>\n        <TextField\n          variant=\"outlined\"c\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Type a message\"\n          fullWidth\n        />\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">Send</Button>\n      </Form>\n    </Box>\n  );\n};\n\nexport default DoctorAI;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,GAAG,EAAEC,SAAS,EAAEC,MAAM,EAAEC,UAAU,EAACC,KAAK,QAAQ,eAAe;AACxE,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,eAAe,MAAM,kDAAkD;AAC9E,SAASC,QAAQ,QAAQ,sBAAsB;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,YAAY,GAAGL,MAAM,CAACD,KAAK,CAAC,CAAC;EACjCO,OAAO,EAAE,MAAM;EACfC,KAAK,EAAE;AACT,CAAC,CAAC;AAEF,MAAMC,WAAW,GAAGR,MAAM,CAACK,YAAY,CAAC,CAAC;EACvCI,SAAS,EAAE,UAAU;EACrBC,eAAe,EAAE;AACnB,CAAC,CAAC;AAACC,EAAA,GAHGH,WAAW;AAKjB,MAAMI,UAAU,GAAGZ,MAAM,CAACK,YAAY,CAAC,CAAC;EACtCI,SAAS,EAAE,YAAY;EACvBC,eAAe,EAAE;AACnB,CAAC,CAAC;AAACG,GAAA,GAHGD,UAAU;AAKhB,MAAME,IAAI,GAAGd,MAAM,CAAC,MAAM,CAAC,CAAC;EAC1Be,OAAO,EAAE,MAAM;EACfC,cAAc,EAAE,QAAQ;EACxBC,MAAM,EAAE,WAAW;EACnBC,GAAG,EAAE;AACP,CAAC,CAAC;AAACC,GAAA,GALGL,IAAI;AAUV,MAAMM,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAM,CAACgC,KAAK,EAAEC,QAAQ,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMkC,aAAa,GAAGhC,MAAM,CAAC,IAAI,CAAC;EAGlC,MAAMiC,KAAK,GAAGzB,QAAQ,CAAC,CAAC;EAExB,MAAM0B,aAAa,GAAG5B,MAAM,CAACL,GAAG,CAAC,CAACkC,IAAA;IAAA,IAAC;MAAEF;IAAM,CAAC,GAAAE,IAAA;IAAA,OAAM;MAChDC,MAAM,EAAE,OAAO;MACfC,MAAM,EAAE,gBAAgB;MACxBd,MAAM,EAAE,MAAM;MACdX,OAAO,EAAE,MAAM;MACf0B,SAAS,EAAE,MAAM;MACjB,sBAAsB,EAAE;QACtBzB,KAAK,EAAE;MACT,CAAC;MACD,4BAA4B,EAAE;QAC5B0B,UAAU,EAAE;MACd,CAAC;MACD,4BAA4B,EAAE;QAC5BA,UAAU,EAAE;MACd,CAAC;MACD,kCAAkC,EAAE;QAClCA,UAAU,EAAE;MACd,CAAC;MACD,CAACN,KAAK,CAACO,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC,GAAG;QAC9BlB,MAAM,EAAE;MACV;IACF,CAAC;EAAA,CAAC,CAAC;EAIH,MAAMmB,cAAc,GAAGA,CAAA,KAAM;IAC3BV,aAAa,CAACW,OAAO,CAACC,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAC9D,CAAC;EAED9C,SAAS,CAAC2C,cAAc,EAAE,CAACd,QAAQ,CAAC,CAAC;EAErC,MAAMkB,aAAa,GAAG,MAAOC,OAAO,IAAK;IACvC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,EAAE;MAC9CC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBN,OAAO,EAAEA;MACX,CAAC,CAAC;MACFO,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC;EAED,MAAME,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB9B,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAAEgC,IAAI,EAAE9B,KAAK;MAAE+B,MAAM,EAAE;IAAO,CAAC,CAAC,CAAC;IAC3DhC,WAAW,CAAEiC,YAAY,IAAK,CAC5B,GAAGA,YAAY,EACf;MAAEF,IAAI,eAAElD,OAAA,CAACH,eAAe;QAAAwD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MAAEL,MAAM,EAAE;IAAM,CAAC,CAC7C,CAAC;IACF,MAAMN,IAAI,GAAG,MAAMT,aAAa,CAAChB,KAAK,CAAC;IACvCqC,UAAU,CAAC,MAAM;MACb;MACAtC,WAAW,CAAEiC,YAAY,IAAK,CAC1B,GAAGA,YAAY,CAACM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAC5B;QAAER,IAAI,EAAEL,IAAI,CAACR,OAAO;QAAEc,MAAM,EAAE;MAAM,CAAC,CACxC,CAAC;IACN,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACV9B,QAAQ,CAAC,EAAE,CAAC;EAChB,CAAC;EAGC,oBACErB,OAAA,CAACT,GAAG;IAACoE,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrB5D,OAAA,CAACwB,aAAa;MAAAoC,QAAA,GACX1C,QAAQ,CAAC2C,GAAG,CAAC,CAACxB,OAAO,EAAEyB,KAAK,KAC3BzB,OAAO,CAACc,MAAM,KAAK,MAAM,gBACvBnD,OAAA,CAACI,WAAW;QAAAwD,QAAA,eAAa5D,OAAA,CAACN,UAAU;UAACqE,OAAO,EAAC,OAAO;UAAAH,QAAA,EAAEvB,OAAO,CAACa;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa;MAAC,GAA9DM,KAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAsE,CAAC,gBAC9FxD,OAAA,CAACQ,UAAU;QAAAoD,QAAA,eAAa5D,OAAA,CAACN,UAAU;UAACqE,OAAO,EAAC,OAAO;UAAAH,QAAA,EAAEvB,OAAO,CAACa;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa;MAAC,GAA9DM,KAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqE,CAC/F,CAAC,eACDxD,OAAA;QAAKgE,GAAG,EAAE1C;MAAc;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,eAChBxD,OAAA,CAACU,IAAI;MAACuD,QAAQ,EAAElB,YAAa;MAAAa,QAAA,gBAC3B5D,OAAA,CAACR,SAAS;QACRuE,OAAO,EAAC,UAAU;QAAAG,CAAC;QACnBC,KAAK,EAAE/C,KAAM;QACbgD,QAAQ,EAAGpB,CAAC,IAAK3B,QAAQ,CAAC2B,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;QAC1CG,WAAW,EAAC,gBAAgB;QAC5BC,SAAS;MAAA;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,eACFxD,OAAA,CAACP,MAAM;QAACsE,OAAO,EAAC,WAAW;QAACS,KAAK,EAAC,SAAS;QAACC,IAAI,EAAC,QAAQ;QAAAb,QAAA,EAAC;MAAI;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACvC,EAAA,CA/FID,QAAQ;EAAA,QAOElB,QAAQ;AAAA;AAAA4E,GAAA,GAPlB1D,QAAQ;AAiGd,eAAeA,QAAQ;AAAC,IAAAT,EAAA,EAAAE,GAAA,EAAAM,GAAA,EAAA2D,GAAA;AAAAC,YAAA,CAAApE,EAAA;AAAAoE,YAAA,CAAAlE,GAAA;AAAAkE,YAAA,CAAA5D,GAAA;AAAA4D,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}