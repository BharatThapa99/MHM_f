{"ast":null,"code":"var _jsxFileName = \"/home/chhabi/Desktop/MHM_MHM/frontend/src/Containers/DoctorAI/DoctorAI.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Box, TextField, Button, Typography, Paper } from \"@mui/material\";\nimport styled from '@emotion/styled';\nimport TypingIndicator from \"../../Components/TypingIndicator/TypingIndicator\";\n// import './doctorai.css'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContainer = styled(Box)({\n  border: \"1px solid #ccc\",\n  margin: \"50px\",\n  padding: \"20px\",\n  height: \"400px\",\n  overflowY: \"auto\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  // backgroundColor: \"black\",\n  gap: \"15px\",\n  '&::-webkit-scrollbar': {\n    width: '10px'\n  },\n  '&::-webkit-scrollbar-track': {\n    background: '#f1f1f1'\n  },\n  '&::-webkit-scrollbar-thumb': {\n    background: '#888'\n  },\n  '&::-webkit-scrollbar-thumb:hover': {\n    background: '#555'\n  }\n});\n_c = ChatContainer;\nconst MessagePaper = styled(Paper)({\n  padding: \"10px\",\n  width: \"fit-content\"\n});\nconst UserMessage = styled(MessagePaper)({\n  alignSelf: \"flex-end\",\n  backgroundColor: \"lightblue\"\n});\n_c2 = UserMessage;\nconst BotMessage = styled(MessagePaper)({\n  alignSelf: \"flex-start\",\n  backgroundColor: \"lightgreen\"\n});\n_c3 = BotMessage;\nconst Form = styled('form')({\n  display: \"flex\",\n  justifyContent: \"center\",\n  margin: \"20px 50px\",\n  gap: \"15px\"\n});\n_c4 = Form;\nconst DoctorAI = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const endOfMessages = useRef(null);\n  const scrollToBottom = () => {\n    endOfMessages.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(scrollToBottom, [messages]);\n  const fetchResponse = async message => {\n    const response = await fetch(\"/apis/doctorai/\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        message: message\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    return data;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessages([...messages, {\n      text: input,\n      sender: \"user\"\n    }]);\n    setMessages(prevMessages => [...prevMessages, {\n      text: /*#__PURE__*/_jsxDEV(TypingIndicator, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }, this),\n      sender: \"bot\"\n    }]);\n    const data = await fetchResponse(input);\n    setTimeout(() => {\n      // Remove \"typing...\" message and add bot response\n      setMessages(prevMessages => [...prevMessages.slice(0, -1), {\n        text: data.message,\n        sender: \"bot\"\n      }]);\n    }, 2000); // delay of 2 seconds\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    textAlign: \"center\",\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(ChatContainer, {\n      children: [messages.map((message, index) => message.sender === 'user' ? /*#__PURE__*/_jsxDEV(UserMessage, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 38\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(BotMessage, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 37\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: endOfMessages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        c: true,\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type a message\",\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorAI, \"P+3R0NSqtmAuCJnKok35QqPu50k=\");\n_c5 = DoctorAI;\nexport default DoctorAI;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"ChatContainer\");\n$RefreshReg$(_c2, \"UserMessage\");\n$RefreshReg$(_c3, \"BotMessage\");\n$RefreshReg$(_c4, \"Form\");\n$RefreshReg$(_c5, \"DoctorAI\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","TextField","Button","Typography","Paper","styled","TypingIndicator","jsxDEV","_jsxDEV","ChatContainer","border","margin","padding","height","overflowY","display","flexDirection","gap","width","background","_c","MessagePaper","UserMessage","alignSelf","backgroundColor","_c2","BotMessage","_c3","Form","justifyContent","_c4","DoctorAI","_s","messages","setMessages","input","setInput","endOfMessages","scrollToBottom","current","scrollIntoView","behavior","fetchResponse","message","response","fetch","method","body","JSON","stringify","headers","data","json","handleSubmit","e","preventDefault","text","sender","prevMessages","fileName","_jsxFileName","lineNumber","columnNumber","setTimeout","slice","textAlign","className","children","map","index","variant","ref","onSubmit","c","value","onChange","target","placeholder","fullWidth","color","type","_c5","$RefreshReg$"],"sources":["/home/chhabi/Desktop/MHM_MHM/frontend/src/Containers/DoctorAI/DoctorAI.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Box, TextField, Button, Typography,Paper } from \"@mui/material\";\nimport styled from '@emotion/styled';\nimport TypingIndicator from \"../../Components/TypingIndicator/TypingIndicator\";\n// import './doctorai.css'\n\nconst ChatContainer = styled(Box)({\n  border: \"1px solid #ccc\",\n  margin: \"50px\",\n  padding: \"20px\",\n  height: \"400px\",\n  overflowY: \"auto\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  // backgroundColor: \"black\",\n  gap: \"15px\",\n  '&::-webkit-scrollbar': {\n    width: '10px',\n  },\n  '&::-webkit-scrollbar-track': {\n    background: '#f1f1f1', \n  },\n  '&::-webkit-scrollbar-thumb': {\n    background: '#888', \n  },\n  '&::-webkit-scrollbar-thumb:hover': {\n    background: '#555', \n  },\n});\n\nconst MessagePaper = styled(Paper)({\n  padding: \"10px\",\n  width: \"fit-content\"\n});\n\nconst UserMessage = styled(MessagePaper)({\n  alignSelf: \"flex-end\",\n  backgroundColor: \"lightblue\"\n});\n\nconst BotMessage = styled(MessagePaper)({\n  alignSelf: \"flex-start\",\n  backgroundColor: \"lightgreen\"\n});\n\nconst Form = styled('form')({\n  display: \"flex\",\n  justifyContent: \"center\",\n  margin: \"20px 50px\",\n  gap: \"15px\"\n});\n\n\n\n\nconst DoctorAI = () => {\n  const [messages, setMessages] = useState([]);\n\n  const [input, setInput] = useState(\"\");\n  const endOfMessages = useRef(null);\n\n  const scrollToBottom = () => {\n    endOfMessages.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(scrollToBottom, [messages]);\n\n  const fetchResponse = async (message) => {\n    const response = await fetch(\"/apis/doctorai/\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        message: message,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const data = await response.json();\n    return data;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setMessages([...messages, { text: input, sender: \"user\" }]);\n    setMessages((prevMessages) => [\n      ...prevMessages,\n      { text: <TypingIndicator />, sender: \"bot\" },\n    ]);\n    const data = await fetchResponse(input);\n    setTimeout(() => {\n        // Remove \"typing...\" message and add bot response\n        setMessages((prevMessages) => [\n            ...prevMessages.slice(0, -1),\n            { text: data.message, sender: \"bot\" },\n        ]);\n    }, 2000); // delay of 2 seconds\n    setInput(\"\");\n};\n  \n\n  return (\n    <Box textAlign=\"center\" className=\"chat-container\">\n      <ChatContainer>\n        {messages.map((message, index) => \n          message.sender === 'user' ? \n            <UserMessage key={index}><Typography variant=\"body1\">{message.text}</Typography></UserMessage> :\n            <BotMessage key={index}><Typography variant=\"body1\">{message.text}</Typography></BotMessage>\n        )}\n        <div ref={endOfMessages} />\n      </ChatContainer>\n      <Form onSubmit={handleSubmit}>\n        <TextField\n          variant=\"outlined\"c\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Type a message\"\n          fullWidth\n        />\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">Send</Button>\n      </Form>\n    </Box>\n  );\n};\n\nexport default DoctorAI;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}